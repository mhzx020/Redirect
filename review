

SQL注入防御策略
	进行常规的过滤和转义
	进行参数化查询(应用程序指定查询结构，预留占位符，然后把数据代入)

10.	描述不同种类的XSS并说明怎么利用？
	有三种
	反射型XSS
	存储型XSS
	DOM Based XSS

	反射型XSS只是简单的把用户输入的数据反射到浏览器上，需要诱使用户点击一个恶意链接才能攻击成功

	存储型XSS会把数据存储在服务器端，等用户进行访问的时候就会生效

	DOM型XSS类似于反射型，但它不依赖于提交数据到服务器端，而是从客户端获得DOM中的数据直接在本地执行

	检测XSS
	反射型：
		对于可能的输入点，先通过良性输入确定输入在程序中的反射位置，然后根据具体的位置进行对应的payload输入并进行绕过
	存储型：
		对于可能的输入点，提交良性输入，然后检查输入的出现位置并检查管理员访问的页面是否会出现，对于正常的需求，比如评论审批，再根据具体的位置进行对应payload的输入看是否能绕过，对于程序流程也要进行检测
	DOM型：
		检查所有的客户端JS，看其中是否使用了可能会导致漏洞的DOM属性，如document.location、document.referrer等URL访问，还有document.write这些进行输出的函数

	防御反射型和保存型XSS
1.	确认输入
	包括数据不能过长
	确保数据仅包含某组合法字符
	数据与一个特殊的正则表达式相匹配(类似于邮箱)
2.	确认输出
	将用户的数据复制到页面的响应中之前，先进行html编码
3.	消除危险的插入点
	避免在现有的javascript代码中插入用户可控的数据，标签属性避免嵌入用户输入，应明确指定页面的编码类型
4.	只允许有限的html

	防御DOM型XSS
1.	尽量避免使用客户端脚本处理DOM数据并把它直接插入到页面中
2.	输入确认，通过白名单确认
3.	在客户端对url数据进行严格的确认，数量，内容等
4.	对输出进行html编码

11.	同源策略及目的
	同源指的是协议相同，域名相同，端口相同
	目的是为了限制从一个源加载的文档或脚本与另一个源的资源进行交互的过程

	限制范围
(1)	Cookie、LocalStorage和IndexDB无法读取
(2)	DOM无法获得
(3)	AJAX请求不能发送

	信息获取绕过手段：
	对于一级域名相同，只是二级域名不同的情况，浏览器允许设置	document.domain来获取Cookie和iframe
	
	可以通过把内容放到url的片段标识符后面来进行通信
	也可以通过把内容放到window.name中来进行通信
	postMessage

	Ajax请求绕过
	JSONP
	通过设置回调函数以JSON请求的方式进行Ajax请求

	通过WebSocket进行通信

	CORS跨源资源共享


12.	Java反序列化漏洞
	是指传入反序列化对象通过Apache Commons Collections的链式反射调用来进行远程代码执行

	
13.	XML外部实体注入
	可以读取任意文件、执行命令、探测内网

14.	TCP协议栈的内容
	在数据链路层加了14字节的mac包头，在网络层加了20字节的IP包头，在传输层加了20字节的TCP包头

15.	TCP包的分析
	先按IP进行过滤，然后按发送序列号进行排列，再解码字节流

16．	JSON劫持
	类似于CSRF，诱使用户访问恶意页面，从而进行跨站请求json数据，窃取用户信息

17．	“水坑”攻击
	攻陷攻击目标经常访问的网站并植入攻击代码，一旦攻击目标访问该网站就会中招

18.	支付中的安全问题
	钓鱼网站，支付信息被篡改，支付信息泄露
	通过钓鱼邮件获取相关人员信息
	通过网络嗅探等截获数据包
	对目标任务进行定向渗透
	撞库，通过社工库查询相关人员信息


19.	PHP反序列化漏洞
	根据magic函数和进行反序列化的类中的函数来进行利用，一般通过覆盖变量来进行文件读取或者删除文件操作
